#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–æ–º ID —á–µ—Ä–µ–∑ Railway API
"""

import requests
import json

# URL Railway API
RAILWAY_API_URL = 'https://emelyanovtgbot-webapp-production.up.railway.app'

def get_id_stats():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É ID –∏–∑ API"""
    try:
        response = requests.get(f'{RAILWAY_API_URL}/api/get_id_stats')
        if response.status_code == 200:
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return None

def reset_id_counter():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏–∫ ID —á–µ—Ä–µ–∑ API"""
    try:
        response = requests.post(f'{RAILWAY_API_URL}/api/reset_id_counter')
        if response.status_code == 200:
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å—á—ë—Ç—á–∏–∫–∞: {e}")
        return None

def show_stats():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É ID"""
    stats = get_id_stats()
    if not stats:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        return
    
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê ID –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 50)
    print(f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}")
    print(f"üî¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π ID: {stats['min_id']}")
    print(f"üî¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ID: {stats['max_id']}")
    print(f"üî¢ –°–ª–µ–¥—É—é—â–∏–π ID –±—É–¥–µ—Ç: {stats['next_id']}")
    
    if stats['total_users'] > 0:
        gap = stats['id_gap']
        print(f"üìà –†–∞–∑—Ä—ã–≤ –º–µ–∂–¥—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º ID: {gap}")
        
        if gap > 10:
            print("‚ö†Ô∏è  –ë–æ–ª—å—à–æ–π —Ä–∞–∑—Ä—ã–≤! –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–±—Ä–æ—Å —Å—á—ë—Ç—á–∏–∫–∞")
        elif gap > 0:
            print("‚ö†Ô∏è  –ù–µ–±–æ–ª—å—à–æ–π —Ä–∞–∑—Ä—ã–≤, –Ω–æ –º–æ–∂–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å")
        else:
            print("‚úÖ –°—á—ë—Ç—á–∏–∫ –æ–ø—Ç–∏–º–∞–ª–µ–Ω!")
    else:
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞, —Å—á—ë—Ç—á–∏–∫ –Ω–∞ 1")

def main():
    print("üîÑ –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ß–Å–¢–ß–ò–ö–û–ú ID")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    try:
        health_response = requests.get(f'{RAILWAY_API_URL}/health')
        if health_response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\nüìä –¢–ï–ö–£–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    show_stats()
    
    print("\n" + "=" * 50)
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n1. –°–±—Ä–æ—Å–∏—Ç—å —Å—á—ë—Ç—á–∏–∫ ID\n2. –¢–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-2): ").strip()
    
    if choice == "1":
        print("\nüîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ ID...")
        result = reset_id_counter()
        if result:
            print("‚úÖ –°—á—ë—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω!")
            print(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {result['user_count']}")
            print(f"üî¢ –°–ª–µ–¥—É—é—â–∏–π ID: {result['next_id']}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å—á—ë—Ç—á–∏–∫–∞!")
    
    elif choice == "2":
        print("\nüìä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
    
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
        return
    
    print("\n" + "=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    print("üìä –ü–û–°–õ–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô:")
    show_stats()
    
    print("\nüí° –í–ê–ñ–ù–û:")
    print("   ‚Ä¢ –°—á—ë—Ç—á–∏–∫ ID –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("   ‚Ä¢ –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å—á—ë—Ç—á–∏–∫ –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è")
    print("   ‚Ä¢ –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ PostgreSQL")
    print("   ‚Ä¢ –°–±—Ä–æ—Å —Å—á—ë—Ç—á–∏–∫–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –µ–≥–æ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π + 1")

if __name__ == "__main__":
    main() 