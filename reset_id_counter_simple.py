#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å—á—ë—Ç—á–∏–∫–∞ ID —á–µ—Ä–µ–∑ Railway API
"""

import os
import requests
import json
from datetime import datetime

# URL Railway API
RAILWAY_API_URL = 'https://emelyanovtgbot-webapp-production.up.railway.app'

def get_database_stats():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        response = requests.get(f'{RAILWAY_API_URL}/api/users')
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            return None
        
        users = response.json()
        return users
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return None

def show_current_stats():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    users = get_database_stats()
    
    if not users:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        return
    
    if not users:
        print("üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞!")
        return
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_users = len(users)
    users_with_form = sum(1 for u in users.values() if u.get('form_data'))
    users_without_form = total_users - users_with_form
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    page_stats = {}
    for user_data in users.values():
        page = user_data.get('current_page', 1)
        page_stats[page] = page_stats.get(page, 0) + 1
    
    print("üìä –¢–ï–ö–£–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    print(f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
    print(f"üìù –ó–∞–ø–æ–ª–Ω–∏–ª–∏ —Ñ–æ—Ä–º—É: {users_with_form}")
    print(f"‚è≥ –ù–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ —Ñ–æ—Ä–º—É: {users_without_form}")
    
    print(f"\nüìÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º:")
    for page in sorted(page_stats.keys()):
        print(f"   ‚Ä¢ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}: {page_stats[page]} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print(f"\nüïí –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    sorted_users = list(users.items())[:5]
    
    for user_id, user_data in sorted_users:
        current_page = user_data.get('current_page', 1)
        has_form = "‚úÖ" if user_data.get('form_data') else "‚ùå"
        print(f"   ‚Ä¢ {user_id} | –°—Ç—Ä–∞–Ω–∏—Ü–∞ {current_page} | –§–æ—Ä–º–∞ {has_form}")

def reset_id_sequence():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á—ë—Ç—á–∏–∫ ID —á–µ—Ä–µ–∑ API (–∏–º–∏—Ç–∞—Ü–∏—è)"""
    print("üîÑ –°–ë–†–û–° –°–ß–Å–¢–ß–ò–ö–ê ID")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    users = get_database_stats()
    if not users:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        return False
    
    total_users = len(users)
    print(f"üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
    
    if total_users == 0:
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞, —Å—á—ë—Ç—á–∏–∫ —É–∂–µ –Ω–∞ 1")
        return True
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print(f"   ‚Ä¢ –¢–µ–∫—É—â–∏–π —Å—á—ë—Ç—á–∏–∫ ID: ~{total_users + 1}")
    print(f"   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å—á—ë—Ç—á–∏–∫: {total_users + 1}")
    print(f"   ‚Ä¢ –†–∞–∑—Ä—ã–≤ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π, —Å–±—Ä–æ—Å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    
    return True

def optimize_id_sequence():
    """–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç —Å—á—ë—Ç—á–∏–∫ ID (–∏–º–∏—Ç–∞—Ü–∏—è)"""
    print("üîÑ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –°–ß–Å–¢–ß–ò–ö–ê ID")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    users = get_database_stats()
    if not users:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        return False
    
    total_users = len(users)
    print(f"üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
    
    if total_users == 0:
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞, —Å—á—ë—Ç—á–∏–∫ –æ–ø—Ç–∏–º–∞–ª–µ–Ω")
        return True
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print(f"\nüìà –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï:")
    print(f"   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
    print(f"   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å—á—ë—Ç—á–∏–∫: {total_users + 1}")
    print(f"   ‚Ä¢ –°—á—ë—Ç—á–∏–∫ —É–∂–µ –æ–ø—Ç–∏–º–∞–ª–µ–Ω!")
    
    return True

def main():
    print("üîÑ –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ß–Å–¢–ß–ò–ö–û–ú ID –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    try:
        health_response = requests.get(f'{RAILWAY_API_URL}/health')
        if health_response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\nüìä –ü–ï–†–ï–î –ê–ù–ê–õ–ò–ó–û–ú:")
    show_current_stats()
    
    print("\n" + "=" * 50)
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n1. –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—á—ë—Ç—á–∏–∫ ID\n2. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—á—ë—Ç—á–∏–∫ ID\n3. –¢–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ").strip()
    
    if choice == "1":
        print("\nüîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á—ë—Ç—á–∏–∫ ID...")
        if reset_id_sequence():
            print("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ!")
    
    elif choice == "2":
        print("\nüîÑ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Å—á—ë—Ç—á–∏–∫ ID...")
        if optimize_id_sequence():
            print("‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏!")
    
    elif choice == "3":
        print("\nüìä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
    
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
        return
    
    print("\n" + "=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    print("üìä –ü–û–°–õ–ï –ê–ù–ê–õ–ò–ó–ê:")
    show_current_stats()
    
    print("\nüí° –í–ê–ñ–ù–û:")
    print("   ‚Ä¢ –°—á—ë—Ç—á–∏–∫ ID –≤ PostgreSQL –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è")
    print("   ‚Ä¢ –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å—á—ë—Ç—á–∏–∫ –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è")
    print("   ‚Ä¢ –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ PostgreSQL")
    print("   ‚Ä¢ –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –Ω—É–∂–µ–Ω –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    main() 